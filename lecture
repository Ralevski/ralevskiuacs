
interface Two_D_Shape {
    float PI = 3.14f;
    
    void setParameters(float... parameters);
    float area();
    float 
interface Three_D_Shape {
    float volume();
}

/
class Triangle implements Two_D_Shape {
    private float sideA, sideB, sideC, height;
    
   
    public Triangle(float sideA, float sideB, float sideC, float height) {
        this.sideA = sideA;
        this.sideB = sideB;
        this.sideC = sideC;
        this.height = height;
        System.out.println("A new triangle is created");
    }
    
    
    public boolean isRectangular() {
        return (sideA * sideA + sideB * sideB == sideC * sideC ||
                sideA * sideA + sideC * sideC == sideB * sideB ||
                sideB * sideB + sideC * sideC == sideA * sideA);
    }

    
    @Override
    public void setParameters(float... parameters) {
        if (parameters.length == 4) {
            sideA = parameters[0];
            sideB = parameters[1];
            sideC = parameters[2];
            height = parameters[3];
        }
    }

    @Override
    public float area() {
        return 0.5f * sideA * height;
    }

    @Override
    public float perimeter() {
        return sideA + sideB + sideC;
    }
}

// Sphere class implementing Two_D_Shape and Three_D_Shape
class Sphere implements Two_D_Shape, Three_D_Shape {
    private float radius;

    // Constructor
    public Sphere(float radius) {
        this.radius = radius;
        System.out.println("A new sphere has been created");
    }

    
    @Override
    public void setParameters(float... parameters) {
        if (parameters.length == 1) {
            radius = parameters[0];
        }
    }

    @Override
    public float area() {
        return 4 * PI * radius * radius;
    }

    @Override
    public float perimeter() {
        return 0; 
    }

    // Implementing method from Three_D_Shape interface
    @Override
    public float volume() {
        return (4.0f / 3.0f) * PI * radius * radius * radius;
    }
}

// Main class
public class Shapes {
    public static void main(String[] args) {
        
        Triangle T1 = new Triangle(3, 5, 6, 3);
        Sphere B1 = new Sphere(4);
        Two_D_Shape T2 = new Triangle(8, 2, 10, 16);
        Two_D_Shape B2 = new Sphere(3);
        Three_D_Shape B3 = new Sphere(7);

        
        System.out.println("T1 Area: " + T1.area() + ", Perimeter: " + T1.perimeter() + ", Rectangular: " + T1.isRectangular());
        System.out.println("B1 Area: " + B1.area() + ", Volume: " + B1.volume());
        System.out.println("T2 Area: " + T2.area() + ", Perimeter: " + T2.perimeter());
        System.out.println("B2 Area: " + B2.area() + ", Perimeter: " + B2.perimeter());
        System.out.println("B3 Volume: " + B3.
        int countTwoDShapes = 0;

        if (T2 instanceof Two_D_Shape) {
            countTwoDShapes++;
        }

        if (B2 instanceof Two_D_Shape) {
            countTwoDShapes++;
        }

        System.out.println("Number of Two_D_Shape instances: " + countTwoDShapes);
    }
}